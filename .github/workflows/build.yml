name: Build

on:
  # Main 브랜치 푸시 (PR 병합) 시에만 빌드
  push:
    branches: [ main ]
  
  # 수동 실행 허용
  workflow_dispatch:

jobs:
  build-web:
    name: Build Web Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build React app
        run: npm run build

      - name: Upload web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/

  build-electron-macos:
    name: Build Electron (macOS)
    runs-on: macos-latest
    needs: build-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install native dependencies
        run: npm rebuild

      - name: Build Electron app (macOS)
        run: npm run electron-pack-mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist/

  build-electron-windows:
    name: Build Electron (Windows)
    runs-on: windows-latest
    needs: build-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install native dependencies
        run: npm rebuild

      - name: Build Electron app (Windows)
        run: npm run electron-pack-win

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/


  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    # main 브랜치에 푸시될 때만 배포 (릴리스 태그에서는 배포하지 않음)
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install and build React app
        run: |
          npm install --legacy-peer-deps
          npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
